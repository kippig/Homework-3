#60x Faster!!

#Python:

def prime_list(n):
    s = []
    smallp = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
    for i in range(1, n+1):
        add = True
        for p in smallp:
            if i%p == 0 and i>p:
                add = False
            else:
                pass
        if add:
            s.append(i)
        else:
            pass
    return s

timeit('prime_list(10000)')

#5 loops, best of 3: 125 ms per loop

#Cython:

%cython
def prime_list1(int n):
    s = []
    smallp = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
    cdef int i,p
    for i in range(1, n+1):
        add = True
        for p in smallp:
            if i>p and i%p == 0:
                add = False
            else:
                pass
        if add:
            s.append(i)
        else:
            pass
    return s

timeit('prime_list1(10000)')

##125 loops, best of 3: 2.61 ms per loop
